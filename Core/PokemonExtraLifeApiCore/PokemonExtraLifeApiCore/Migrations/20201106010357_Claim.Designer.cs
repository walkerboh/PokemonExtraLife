// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PokemonExtraLifeApiCore.EntityFramework;

namespace PokemonExtraLifeApiCore.Migrations
{
    [DbContext(typeof(ExtraLifeContext))]
    [Migration("20201106010357_Claim")]
    partial class Claim
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.DisplayStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CurrentGame")
                        .HasColumnType("text");

                    b.Property<int?>("CurrentHostId")
                        .HasColumnType("integer");

                    b.Property<string>("DonationBlock")
                        .HasColumnType("text");

                    b.Property<decimal>("DonationGoal")
                        .HasColumnType("numeric");

                    b.Property<string>("FollowingGame")
                        .HasColumnType("text");

                    b.Property<decimal>("HealthMultiplier")
                        .HasColumnType("numeric");

                    b.Property<string>("NextGame")
                        .HasColumnType("text");

                    b.Property<bool>("TrackDonations")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("DisplayStatus");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Block")
                        .HasColumnType("text");

                    b.Property<string>("Donor")
                        .HasColumnType("text");

                    b.Property<string>("DonorIdentifier")
                        .HasColumnType("text");

                    b.Property<int?>("Gym")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int?>("PrizeId")
                        .HasColumnType("integer");

                    b.Property<bool>("Processed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Fact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Facts");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Giveaway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Contributor")
                        .HasColumnType("text");

                    b.Property<int>("Gym")
                        .HasColumnType("integer");

                    b.Property<string>("PrizeName")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Giveaways");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("integer");

                    b.Property<bool>("ForceComplete")
                        .HasColumnType("boolean");

                    b.Property<int>("Gym")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Started")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Host", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Pokemon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Damage")
                        .HasColumnType("numeric");

                    b.Property<decimal>("HealthMultiplier")
                        .HasColumnType("numeric");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("StartingHealth")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.PokemonOrder", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("integer");

                    b.Property<bool>("Activated")
                        .HasColumnType("boolean");

                    b.Property<bool>("ForceDone")
                        .HasColumnType("boolean");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Sequence")
                        .HasColumnType("integer");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("integer");

                    b.HasKey("PokemonId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TrainerId");

                    b.ToTable("PokemonOrders");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.PopupPrize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Contributor")
                        .HasColumnType("text");

                    b.Property<int?>("Duration")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("WiningDonor")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.TargetPrize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activated")
                        .HasColumnType("boolean");

                    b.Property<bool>("Claimed")
                        .HasColumnType("boolean");

                    b.Property<string>("Contributor")
                        .HasColumnType("text");

                    b.Property<int?>("DonationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Target")
                        .HasColumnType("numeric");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DonationId")
                        .IsUnique();

                    b.ToTable("TargetPrizes");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Gym")
                        .HasColumnType("integer");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("Leader")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.TwitchChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Game")
                        .HasColumnType("text");

                    b.Property<bool>("Live")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TwitchChannels");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.PokemonOrder", b =>
                {
                    b.HasOne("PokemonExtraLifeApiCore.Models.API.Group", "Group")
                        .WithMany("PokemonOrders")
                        .HasForeignKey("GroupId");

                    b.HasOne("PokemonExtraLifeApiCore.Models.API.Pokemon", "Pokemon")
                        .WithOne("PokemonOrder")
                        .HasForeignKey("PokemonExtraLifeApiCore.Models.API.PokemonOrder", "PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonExtraLifeApiCore.Models.API.Trainer", "Trainer")
                        .WithMany("PokemonOrders")
                        .HasForeignKey("TrainerId");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.TargetPrize", b =>
                {
                    b.HasOne("PokemonExtraLifeApiCore.Models.API.Donation", "Donation")
                        .WithOne("TargetPrize")
                        .HasForeignKey("PokemonExtraLifeApiCore.Models.API.TargetPrize", "DonationId");
                });
#pragma warning restore 612, 618
        }
    }
}
