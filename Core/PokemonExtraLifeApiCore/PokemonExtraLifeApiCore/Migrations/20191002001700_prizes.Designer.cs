// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PokemonExtraLifeApiCore.EntityFramework;

namespace PokemonExtraLifeApiCore.Migrations
{
    [DbContext(typeof(ExtraLifeContext))]
    [Migration("20191002001700_prizes")]
    partial class prizes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.DisplayStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CurrentGame");

                    b.Property<int>("CurrentHostId");

                    b.Property<decimal>("DonationGoal");

                    b.Property<string>("FollowingGame");

                    b.Property<decimal>("HealthMultiplier");

                    b.Property<string>("NextGame");

                    b.Property<bool>("TrackDonations");

                    b.HasKey("Id");

                    b.ToTable("DisplayStatus");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Donor");

                    b.Property<int?>("Gym");

                    b.Property<string>("Message");

                    b.Property<bool>("Processed");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Giveaway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contributor");

                    b.Property<int>("Gym");

                    b.Property<string>("PrizeName");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Giveaways");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DurationMinutes");

                    b.Property<bool>("ForceComplete");

                    b.Property<int>("Gym");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("StartTime");

                    b.Property<bool>("Started");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Host", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Pokemon");

                    b.HasKey("Id");

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Damage");

                    b.Property<decimal>("HealthMultiplier");

                    b.Property<string>("Icon");

                    b.Property<string>("Name");

                    b.Property<decimal>("StartingHealth");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.PokemonOrder", b =>
                {
                    b.Property<int>("PokemonId");

                    b.Property<bool>("Activated");

                    b.Property<bool>("ForceDone");

                    b.Property<int?>("GroupId");

                    b.Property<int>("Id");

                    b.Property<int>("Sequence");

                    b.Property<int?>("TrainerId");

                    b.HasKey("PokemonId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TrainerId");

                    b.ToTable("PokemonOrders");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.PopupPrize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contributor");

                    b.Property<int?>("Duration");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("StartTime");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Gym");

                    b.Property<string>("Icon");

                    b.Property<bool>("Leader");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("PokemonExtraLifeApiCore.Models.API.PokemonOrder", b =>
                {
                    b.HasOne("PokemonExtraLifeApiCore.Models.API.Group", "Group")
                        .WithMany("PokemonOrders")
                        .HasForeignKey("GroupId");

                    b.HasOne("PokemonExtraLifeApiCore.Models.API.Pokemon", "Pokemon")
                        .WithOne("PokemonOrder")
                        .HasForeignKey("PokemonExtraLifeApiCore.Models.API.PokemonOrder", "PokemonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonExtraLifeApiCore.Models.API.Trainer", "Trainer")
                        .WithMany("PokemonOrders")
                        .HasForeignKey("TrainerId");
                });
#pragma warning restore 612, 618
        }
    }
}
